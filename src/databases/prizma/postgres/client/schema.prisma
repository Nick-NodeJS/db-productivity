// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../src/databases/prizma/postgres/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id Int @id @default(autoincrement())
  activeProfile Profiles @default(CyberScherlock) @map("active_profile")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  cyberSherlock CyberSherlock?
  google  Google?
  facebook Facebook?

  @@map("users")
}

enum Profiles {
  CyberScherlock
  Facebook
  Google
}

model CyberSherlock {
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique @map("user_id")
  name String
  email String
  emailVerified Boolean @map("email_verified")
  phone String
  phone_verified Boolean @map("phone_verified")
  picture String
  hash String

  @@map("cyber_sherlock")
}

model Google {
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique @map("user_id")
  name String
  email String
  emailVerified Boolean @map("email_verified")
  picture String
  hash String

  @@map("google")
}

model Facebook {
  id     Int  @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique @map("user_id")
  name String
  email String
  emailVerified Boolean @map("email_verified")
  picture String
  hash String

  @@map("facebook")
}

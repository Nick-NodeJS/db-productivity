version: "3.4"

services:
  mongotmp:
    container_name: mongotmp
    image: mongo:latest
    volumes:
      - ./keys/replica.key:/keyfile
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    ports:
      - 27047:27047
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "admin",
          "--port",
          "27047",
          "-u",
          "${MONGODB_USER}",
          "-p",
          "${MONGODB_PASSWORD}",
          "--eval",
          'rs.initiate( { _id : "rs0",members: [{ _id: 0,host: "127.0.0.1:27047" }]}) ; db.getSiblingDB("${MONGODB_DATABASE}").createUser({user: "${MONGODB_USER}",pwd: "${MONGODB_PASSWORD}",roles: [{role: "userAdminAnyDatabase",db:"${MONGODB_DATABASE}"},{role: "clusterAdmin",db:"${MONGODB_DATABASE}"}]})',
        ]
      interval: 10s
      start_period: 10s
    command: [
        "--transitionToAuth",
        "-keyFile",
        "/keyfile",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27047"
      ]
  mongo2:
    container_name: mongo2
    image: mongo:latest
    volumes:
      - ./keys/replica.key:/keyfile
      - ./mongodb-data2:/data/db
    ports:
      - 27027:27027
    depends_on:
      - mongotmp
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--host",
          "mongotmp",
          "--port",
          "27047",
          "admin",
          "-u",
          "${MONGODB_USER}",
          "-p",
          "${MONGODB_PASSWORD}",
          "--eval",
          'rs.add( { host: "127.0.0.1:27027"} )',
        ]
      interval: 10s
      start_period: 20s
    command:
      [
        "-keyFile",
        "/keyfile",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27027",
      ]
  mongo3:
    container_name: mongo3
    image: mongo:latest
    volumes:
      - ./keys/replica.key:/keyfile
      - ./mongodb-data3:/data/db
    ports:
      - 27037:27037
    depends_on:
      - mongotmp
      - mongo2
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--host",
          "mongotmp",
          "--port",
          "27047",
          "admin",
          "-u",
          "${MONGODB_USER}",
          "-p",
          "${MONGODB_PASSWORD}",
          "--eval",
          'rs.add( { host: "127.0.0.1:27037"} )',
        ]
      interval: 10s
      start_period: 30s
    command:
      [
        "-keyFile",
        "/keyfile",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27037",
      ]
  mongo4:
    container_name: mongo4
    image: mongo:latest
    volumes:
      - ./keys/replica.key:/keyfile
      - ./mongodb-data4:/data/db
    ports:
      - 27067:27067
    depends_on:
      - mongotmp
      - mongo2
      - mongo3
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--host",
          "mongotmp",
          "--port",
          "27047",
          "admin",
          "-u",
          "${MONGODB_USER}",
          "-p",
          "${MONGODB_PASSWORD}",
          "--eval",
          'rs.add( { host: "127.0.0.1:27067"} )',
        ]
      interval: 10s
      start_period: 40s
    command:
      [
        "-keyFile",
        "/keyfile",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27067",
      ]
  mongo1:
    container_name: mongo1
    image: mongo:latest
    volumes:
      - ./keys/replica.key:/keyfile
      - ./mongodb-data1:/data/db
    ports:
      - 27017:27017
    depends_on:
      - mongotmp
      - mongo2
      - mongo3
      - mongo4
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--host",
          "mongotmp",
          "--port",
          "27047",
          "admin",
          "-u",
          "${MONGODB_USER}",
          "-p",
          "${MONGODB_PASSWORD}",
          "--eval",
          'rs.add( { host: "127.0.0.1:27017"} );db.adminCommand( { replSetStepDown: 1,force:true } );',
        ]
      interval: 10s
      start_period: 50s
    command:
      [
        "-keyFile",
        "/keyfile",
        "--replSet",
        "rs0",
        "--bind_ip_all"
      ]
  remover:
    container_name: remover
    image: mongo:latest
    volumes:
      - ./keys/replica.key:/keyfile
    depends_on:
      - mongo1
    healthcheck:
      test: /usr/bin/mongosh "mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@127.0.0.1:27017,127.0.0.1:27027,127.0.0.1:27037,127.0.0.1:27067/${MONGODB_DATABASE}?replicaSet=rs0" --eval 'rs.remove("127.0.0.1:27047")'
      interval: 10s
      start_period: 60s
    command:
      [
        "-keyFile",
        "/keyfile",
        "--replSet",
        "rs0",
        "--bind_ip_all"
      ]
